tui.util.defineNamespace("fedoc.content", {});
fedoc.content["markdownCommands_code.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar CommandManager = require('../commandManager');\n\n/**\n * Code\n * Add code markdown syntax to markdown editor\n * @exports Code\n * @augments Command\n */\nvar Code = CommandManager.command('markdown', /** @lends Code */{\n    name: 'Code',\n    keyMap: ['SHIFT+CTRL+C', 'SHIFT+META+C'],\n    /**\n     * Command Handler\n     * @param {MarkdownEditor} mde MarkdownEditor instance\n     */\n    exec: function(mde) {\n        var range, selection,\n            cm = mde.getEditor(),\n            doc = cm.getDoc();\n\n        selection = doc.getSelection();\n        range = cm.getCursor();\n\n        doc.replaceSelection(this.append(selection), 'around');\n\n        if (!selection) {\n            doc.setCursor(range.line, range.ch + 1);\n        }\n\n        cm.focus();\n    },\n    /**\n     * Code를 적용한다\n     * @param {string} text 셀렉션텍스트\n     * @returns {string} 가 적용된 텍스트\n     */\n    append: function(text) {\n        return '`' + text + '`';\n    }\n});\n\nmodule.exports = Code;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"