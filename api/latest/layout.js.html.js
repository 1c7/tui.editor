tui.util.defineNamespace("fedoc.content", {});
fedoc.content["layout.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n/**\n * Editor container template\n * @type {string}\n */\nvar containerTmpl = [\n    '&lt;div class=\"tui-editor\">',\n    '&lt;div class=\"te-md-container\">',\n    '&lt;div class=\"te-editor\" />',\n    '&lt;div class=\"te-md-splitter\" />',\n    '&lt;div class=\"te-preview\" />',\n    '&lt;/div>',\n    '&lt;div class=\"te-ww-container\">',\n    '&lt;div class=\"te-editor\" />',\n    '&lt;/div>',\n    '&lt;/div>'\n].join('');\n\n/**\n * Layout\n * @exports Layout\n * @constructor\n * @class Layout\n * @param {object} options Option object\n * @param {EventManager} eventManager Event manager instance\n */\nfunction Layout(options, eventManager) {\n    this.$el = $(options.el);\n    this.height = options.height;\n    this.type = options.initialEditType;\n    this.eventManager = eventManager;\n\n    this.init();\n    this._initEvent();\n}\n\n/**\n * Initializer\n * @api\n * @memberOf Layout\n */\nLayout.prototype.init = function() {\n    this._renderLayout();\n\n    this._initMarkdownAndPreviewSection();\n    this._initWysiwygSection();\n};\n\n/**\n * Initialize show and hide event\n * @memberOf Layout\n * @private\n */\nLayout.prototype._initEvent = function() {\n    this.eventManager.listen('hide', this.hide.bind(this));\n    this.eventManager.listen('show', this.show.bind(this));\n};\n\n/**\n * Create editor container with template\n * @memberOf Layout\n * @private\n */\nLayout.prototype._renderLayout = function() {\n    this.$containerEl = $(containerTmpl).appendTo(this.$el);\n};\n\n/**\n * Switch editor mode to WYSIWYG\n * @api\n * @memberOf Layout\n */\nLayout.prototype.switchToWYSIWYG = function() {\n    this.$containerEl.removeClass('te-md-mode');\n    this.$containerEl.addClass('te-ww-mode');\n};\n\n/**\n * Switch editor mode to Markdown\n * @api\n * @memberOf Layout\n */\nLayout.prototype.switchToMarkdown = function() {\n    this.$containerEl.removeClass('te-ww-mode');\n    this.$containerEl.addClass('te-md-mode');\n};\n\n/**\n * Initialize editor to Markdown and set preview section\n * @memberOf Layout\n * @private\n */\nLayout.prototype._initMarkdownAndPreviewSection = function() {\n    this.$mdEditorContainerEl = this.$containerEl.find('.te-md-container .te-editor');\n    this.$previewEl = this.$containerEl.find('.te-md-container .te-preview');\n};\n\n/**\n * Initialize editor to WYSIWYG\n * @memberOf Layout\n * @private\n */\nLayout.prototype._initWysiwygSection = function() {\n    this.$wwEditorContainerEl = this.$containerEl.find('.te-ww-container .te-editor');\n};\n\n/**\n * Set preview to vertical split style\n * @memberOf Layout\n * @private\n */\nLayout.prototype._verticalSplitStyle = function() {\n    this.$containerEl.find('.te-md-container').removeClass('te-preview-style-tab');\n    this.$containerEl.find('.te-md-container').addClass('te-preview-style-vertical');\n};\n\n/**\n * Set tab style preview mode\n * @memberOf Layout\n * @private\n */\nLayout.prototype._tabStyle = function() {\n    this.$containerEl.find('.te-md-container').removeClass('te-preview-style-vertical');\n    this.$containerEl.find('.te-md-container').addClass('te-preview-style-tab');\n};\n\n/**\n * Toggle preview style between tab and vertical split\n * @api\n * @memberOf Layout\n * @param {string} style Preview style ('tab' or 'vertical')\n */\nLayout.prototype.changePreviewStyle = function(style) {\n    if (style === 'tab') {\n        this._tabStyle();\n    } else if (style === 'vertical') {\n        this._verticalSplitStyle();\n    }\n};\n\n/**\n * Hide Editor\n * @api\n * @memberOf Layout\n */\nLayout.prototype.hide = function() {\n    this.$el.find('.tui-editor').addClass('te-hide');\n};\n\n/**\n * Show Editor\n * @api\n * @memberOf Layout\n */\nLayout.prototype.show = function() {\n    this.$el.find('.tui-editor').removeClass('te-hide');\n};\n\n/**\n * Remove Editor\n * @api\n * @memberOf Layout\n */\nLayout.prototype.remove = function() {\n    this.$el.find('.tui-editor').remove();\n};\n\n/**\n * Get jQuery wrapped editor container element\n * @api\n * @memberOf Layout\n * @returns {jQuery}\n */\nLayout.prototype.getEditorEl = function() {\n    return this.$containerEl;\n};\n\n/**\n * Get jQuery wrapped preview element\n * @api\n * @memberOf Layout\n * @returns {jQuery}\n */\nLayout.prototype.getPreviewEl = function() {\n    return this.$previewEl;\n};\n\n/**\n * Get jQuery wrapped Markdown editor element\n * @api\n * @memberOf Layout\n * @returns {jQuery}\n */\nLayout.prototype.getMdEditorContainerEl = function() {\n    return this.$mdEditorContainerEl;\n};\n\n/**\n * Get jQuery wrapped WYSIWYG editor element\n * @api\n * @memberOf Layout\n * @returns {jQuery}\n */\nLayout.prototype.getWwEditorContainerEl = function() {\n    return this.$wwEditorContainerEl;\n};\n\nmodule.exports = Layout;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"