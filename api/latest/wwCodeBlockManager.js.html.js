tui.util.defineNamespace("fedoc.content", {});
fedoc.content["wwCodeBlockManager.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements wysiwyg p manager\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar domUtils = require('./domUtils');\n\nvar util = tui.util;\n\nvar tagEntities = {\n    '&amp;': '&amp;amp;',\n    '&lt;': '&amp;lt;',\n    '>': '&amp;gt;'\n};\n\n/**\n * WwCodeBlockManager\n * @exports WwCodeBlockManager\n * @class WwCodeBlockManager\n * @constructor\n * @param {WysiwygEditor} wwe wysiwygEditor instance\n */\nfunction WwCodeBlockManager(wwe) {\n    this.wwe = wwe;\n    this.eventManager = wwe.eventManager;\n\n    this._init();\n}\n\n/**\n * Name property\n * @api\n * @memberOf WwCodeBlockManager\n * @type {string}\n */\nWwCodeBlockManager.prototype.name = 'codeblock';\n\n/**\n * _init\n * Initialize\n * @memberOf WwCodeBlockManager\n * @private\n */\nWwCodeBlockManager.prototype._init = function() {\n    this._initKeyHandler();\n    this._initEvent();\n};\n\n/**\n * _initKeyHandler\n * Initialize key event handler\n * @memberOf WwCodeBlockManager\n * @private\n */\nWwCodeBlockManager.prototype._initKeyHandler = function() {\n    this.wwe.addKeyEventHandler('ENTER', this._recoverIncompleteLineInPreTag.bind(this));\n    this.wwe.addKeyEventHandler('BACK_SPACE', this._unforamtCodeIfToplineZeroOffset.bind(this));\n    this.wwe.addKeyEventHandler('BACK_SPACE', this._unformatCodeIfCodeBlockHasOneCodeTag.bind(this));\n    this.wwe.addKeyEventHandler('BACK_SPACE', this._removeLastCharInCodeTagIfCodeTagHasOneChar.bind(this));\n    this.wwe.addKeyEventHandler('BACK_SPACE', this._removeCodeIfCodeIsEmpty.bind(this));\n    this.wwe.addKeyEventHandler('BACK_SPACE', this._recoverIncompleteLineInPreTag.bind(this));\n};\n\n/**\n * _initEvent\n * Initialize eventmanager event\n * @memberOf WwCodeBlockManager\n * @private\n */\nWwCodeBlockManager.prototype._initEvent = function() {\n    var self = this;\n\n    this.eventManager.listen('wysiwygSetValueAfter', function() {\n        self._splitCodeblockToEachLine();\n    });\n\n    this.eventManager.listen('wysiwygProcessHTMLText', function(html) {\n        return self._mergeCodeblockEachlinesFromHTMLText(html);\n    });\n};\n\n/**\n * Convert copied nodes to code block if need\n * @api\n * @memberOf WwCodeBlockManager\n * @param {Array.&lt;Node>} nodes Node array\n * @returns {DocumentFragment}\n */\nWwCodeBlockManager.prototype.prepareToPasteOnCodeblock = function(nodes) {\n    var range = this.wwe.getEditor().getSelection().cloneRange();\n    var frag = this.wwe.getEditor().getDocument().createDocumentFragment();\n\n    if (nodes.length === 1 &amp;&amp; this._isCodeBlock(nodes[0])) {\n        frag.appendChild(this._copyCodeblockTypeFromRangeCodeblock(nodes.shift(), range));\n    } else {\n        frag.appendChild(this._copyCodeblockTypeFromRangeCodeblock(this.convertToCodeblock(nodes), range));\n    }\n\n    return frag;\n};\n\n/**\n * Wrap nodes into code block\n * @api\n * @memberOf WwCodeBlockManager\n * @param {Array.&lt;Node>} nodes Node array\n * @returns {HTMLElement} Code block element\n */\nWwCodeBlockManager.prototype.convertToCodeblock = function(nodes) {\n    var $codeblock = $('&lt;pre />');\n    var self = this;\n    var node = nodes.shift();\n\n    while (node) {\n        $codeblock.append(self._makeCodeBlockLineHtml(node.textContent));\n        node = nodes.shift();\n    }\n\n    return $codeblock[0];\n};\n\n/**\n * Copy content with code block style from code block selection\n * @memberOf WwCodeBlockManager\n * @param {HTMLElement} element Copied element\n * @param {Range} range Range object\n * @returns {HTMLElement}\n * @private\n */\nWwCodeBlockManager.prototype._copyCodeblockTypeFromRangeCodeblock = function(element, range) {\n    var blockNode, attrs;\n\n    blockNode = domUtils.getParentUntil(range.commonAncestorContainer, this.wwe.get$Body()[0]);\n\n    if (domUtils.getNodeName(blockNode) === 'PRE') {\n        attrs = $(blockNode).prop('attributes');\n\n        util.forEach(attrs, function(attr) {\n            $(element).attr(attr.name, attr.value);\n        });\n    }\n\n    return element;\n};\n\n/**\n * Merge code block lines\n * @memberOf WwCodeBlockManager\n * @param {string} html HTML string\n * @returns {string}\n * @private\n */\nWwCodeBlockManager.prototype._mergeCodeblockEachlinesFromHTMLText = function(html) {\n    html = html.replace(/&lt;pre( .*?)?>(.*?)&lt;\\/pre>/g, function(match, codeAttr, code) {\n        code = code.replace(/&lt;\\/code>&lt;br \\/>/g, '\\n');\n        code = code.replace(/&lt;code ?(.*?)>/g, '');\n        code = code.replace(/\\n$/, '');\n\n        return '&lt;pre>&lt;code' + (codeAttr || '') + '>' + code + '&lt;/code>&lt;/pre>';\n    });\n\n    return html;\n};\n\n/**\n * Split code block to lines\n * @memberOf WwCodeBlockManager\n * @private\n */\nWwCodeBlockManager.prototype._splitCodeblockToEachLine = function() {\n    var self = this;\n\n    this.wwe.get$Body().find('pre').each(function(index, pre) {\n        var codelines = pre.textContent.replace(/\\n+$/, '').split('\\n'),\n            lang = $(pre).find('code').attr('data-language');\n\n        if (lang) {\n            $(pre).attr('data-language', lang);\n            $(pre).addClass('lang-' + lang);\n        }\n\n        $(pre).empty();\n\n        util.forEach(codelines, function(line) {\n            $(pre).append(self._makeCodeBlockLineHtml(line));\n        });\n    });\n};\n\n/**\n * Make code HTML text\n * @memberOf WwCodeBlockManager\n * @param {string} lineContent Content text\n * @returns {string}\n * @private\n */\nWwCodeBlockManager.prototype._makeCodeBlockLineHtml = function(lineContent) {\n    if (!lineContent) {\n        lineContent = '\\u200B';\n    }\n\n    return '&lt;div>&lt;code>' + sanitizeHtmlCode(lineContent) + '&lt;/code>&lt;br>&lt;/div>';\n};\n\n/**\n * Insert ZWB code block if in empty code\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._inserNewCodeIfInEmptyCode = function(ev, range) {\n    if (this.isInCodeBlock(range) &amp;&amp; domUtils.getTextLength(range.startContainer) === 0) {\n        ev.preventDefault();\n        this.wwe.getEditor().saveUndoState(range);\n        $('&lt;div>&lt;code>&amp;#8203&lt;/code>&lt;br>&lt;/div>').insertBefore(domUtils.getParentUntil(range.startContainer, 'PRE'));\n\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Unformat code at top line and offset equals 0\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._unforamtCodeIfToplineZeroOffset = function(ev, range) {\n    var currentNodeName, code;\n\n    if (!this.isInCodeBlock(range)) {\n        return true;\n    }\n\n    currentNodeName = domUtils.getNodeName(range.startContainer);\n    code = domUtils.getParentUntil(range.startContainer, 'PRE');\n\n    //최상단의 라인의 0오프셋 일때\n    if (currentNodeName === 'TEXT'\n        &amp;&amp; range.startOffset === 0\n        &amp;&amp; !code.previousSibling\n    ) {\n        $(code).text(range.startContainer.textContent);\n\n        range.setStart(code.childNodes[0], 0);\n        this.wwe.getEditor().setSelection(range);\n\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Unformat code when one CODE tag in PRE tag\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._unformatCodeIfCodeBlockHasOneCodeTag = function(ev, range) {\n    var pre, div;\n\n    if (!this.isInCodeBlock(range)) {\n        return true;\n    }\n\n    pre = domUtils.getParentUntil(range.startContainer);\n    div = domUtils.getParentUntil(range.startContainer, 'PRE');\n\n    //코드블럭이 code하나밖에 없을때\n    if (range.startOffset === 0 &amp;&amp; $(pre).find('code').length &lt;= 1) {\n        $(div).find('code').children().unwrap('code');\n\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Remove last character in CODE tag when CODE has one character\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._removeLastCharInCodeTagIfCodeTagHasOneChar = function(ev, range) {\n    var currentNodeName;\n\n    if (!this.isInCodeBlock(range)) {\n        return true;\n    }\n\n    currentNodeName = domUtils.getNodeName(range.startContainer);\n\n    //텍스트 노드인경우 마지막 케릭터와 code블럭이 함께 삭제되는것을 방지(squire가 삭제하면 다시만든다)\n    if (currentNodeName === 'TEXT'\n        &amp;&amp; domUtils.getOffsetLength(range.startContainer) === 1\n        &amp;&amp; range.startOffset &lt;= 2\n    ) {\n        ev.preventDefault();\n        range.startContainer.textContent = '\\u200B';\n\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Recover incomplete line in PRE tag\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._recoverIncompleteLineInPreTag = function(ev, range) {\n    var pre;\n\n    if (this.wwe.getEditor().hasFormat('PRE')) {\n        pre = domUtils.getParentUntil(range.startContainer, this.wwe.get$Body()[0]);\n\n        this.wwe.defer(function(wwe) {\n            var modified;\n\n            $(pre).find('div').each(function(index, div) {\n                if (!$(div).find('code').length) {\n                    $(div).html('&lt;code>' + ($(div).text() || '&amp;#8203') + '&lt;/code>&lt;br>');\n                    modified = true;\n                }\n            });\n\n            if (modified) {\n                wwe.readySilentChange();\n            }\n        });\n    }\n\n    return true;\n};\n\n/**\n * Remove blank CODE tag\n * @memberOf WwCodeBlockManager\n * @param {Event} ev Event object\n * @param {Range} range Range object\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._removeCodeIfCodeIsEmpty = function(ev, range) {\n    var currentNodeName, div;\n\n    if (this.isInCodeBlock(range)) {\n        currentNodeName = domUtils.getNodeName(range.startContainer);\n        div = domUtils.getParentUntil(range.startContainer, 'PRE');\n\n        if (currentNodeName === 'TEXT'\n            &amp;&amp; domUtils.getOffsetLength(range.startContainer) === 0\n            &amp;&amp; range.startOffset &lt;= 1\n        ) {\n            $(div).html('&lt;br>');\n\n            range.setStart(div, 0);\n            range.collapse(true);\n\n            this.wwe.getEditor().setSelection(range);\n\n            return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n * Return boolean value of whether current range is in the code block\n * @memberOf WwCodeBlockManager\n * @param {Range} range Range object\n * @returns {boolean}\n */\nWwCodeBlockManager.prototype.isInCodeBlock = function(range) {\n    var target;\n\n    if (range.collapsed) {\n        target = range.startContainer;\n    } else {\n        target = range.commonAncestorContainer;\n    }\n\n    return this._isCodeBlock(target);\n};\n\n/**\n * Verify given element is code block\n * @memberOf WwCodeBlockManager\n * @param {HTMLElement} element Element\n * @returns {boolean}\n * @private\n */\nWwCodeBlockManager.prototype._isCodeBlock = function(element) {\n    return !!$(element).closest('pre').length\n        &amp;&amp; (!!$(element).closest('code').length || !!$(element).find('code').length);\n};\n\nfunction sanitizeHtmlCode(code) {\n    return code.replace(/[&lt;>&amp;]/g, function(tag) {\n        return tagEntities[tag] || tag;\n    });\n}\n\nmodule.exports = WwCodeBlockManager;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"