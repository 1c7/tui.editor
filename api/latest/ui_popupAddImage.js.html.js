tui.util.defineNamespace("fedoc.content", {});
fedoc.content["ui_popupAddImage.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements PopupAddImage\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar LayerPopup = require('./layerpopup'),\n    Tab = require('./tab');\n\nvar util = tui.util;\n\n/* eslint-disable indent */\nvar POPUP_CONTENT = [\n    '&lt;div class=\"te-tab-section\">&lt;/div>',\n    '&lt;div class=\"te-url-type\">',\n        '&lt;label for=\"\">이미지 URL&lt;/label>',\n        '&lt;input type=\"text\" class=\"te-image-url-input\" />',\n    '&lt;/div>',\n    '&lt;form enctype=\"multipart/form-data\" class=\"te-file-type\">',\n        '&lt;label for=\"\">이미지 선택&lt;/label>',\n        '&lt;input type=\"file\" class=\"te-image-file-input\" accept=\"image/*\" />',\n    '&lt;/form>',\n    '&lt;label for=\"url\">설명&lt;/label>',\n    '&lt;input type=\"text\" class=\"te-alt-text-input\" />',\n    '&lt;div class=\"te-button-section\">',\n        '&lt;button type=\"button\" class=\"te-ok-button\">삽입&lt;/button>',\n        '&lt;button type=\"button\" class=\"te-close-button\">취소&lt;/button>',\n    '&lt;/div>'\n].join('');\n/* eslint-enable indent */\n\n/**\n * PopupAddImage\n * It implements a Image Add Popup\n * @exports PopupAddImage\n * @augments LayerPopup\n * @constructor\n * @class\n * @param {object} options options\n */\nfunction PopupAddImage(options) {\n    options = util.extend({\n        title: '이미지 삽입',\n        className: 'te-popup-add-image tui-editor-popup',\n        content: POPUP_CONTENT\n    }, options);\n\n    LayerPopup.call(this, options);\n\n    this.eventManager = options.eventManager;\n\n    this.render();\n\n    this._bindContentEvent();\n    this._linkWithEventManager();\n    this._initApplyImageBindContext();\n}\n\nPopupAddImage.prototype = util.extend(\n    {},\n    LayerPopup.prototype\n);\n\nPopupAddImage.prototype._bindContentEvent = function() {\n    var self = this;\n\n    this.on('click .te-ok-button', function() {\n        self.trigger('okButtonClicked', self);\n        self.hide();\n    });\n\n    this.on('click .te-close-button', function() {\n        self.trigger('closeButtonClicked', self);\n        self.hide();\n    });\n\n    this.on('shown', function() {\n        self.$el.find('.te-image-url-input').focus();\n    });\n\n    this.on('hidden', function() {\n        self.resetInputs();\n    });\n\n    this.tab.on('itemClick', function() {\n        self.resetInputs();\n    });\n\n    this.on('change .te-image-file-input', function() {\n        var filename = self.$el.find('.te-image-file-input').val().split('\\\\').pop();\n        self.$el.find('.te-alt-text-input').val(filename);\n    });\n};\n\nPopupAddImage.prototype._linkWithEventManager = function() {\n    var self = this;\n\n    this.eventManager.listen('focus', function() {\n        self.hide();\n    });\n\n    this.eventManager.listen('openPopupAddImage', function() {\n        self.eventManager.emit('closeAllPopup');\n        self.show();\n    });\n\n    this.eventManager.listen('closeAllPopup', function() {\n        self.hide();\n    });\n\n    this.on('okButtonClicked', function() {\n        if (self._isUrlType()) {\n            self.applyImage();\n        } else {\n            self._preAltValue = self.$el.find('.te-alt-text-input').val();\n            self.eventManager.emit('addImageBlobHook',\n                                    self.$el.find('.te-image-file-input')[0].files[0],\n                                    self.applyImage);\n        }\n    });\n};\n\nPopupAddImage.prototype._initApplyImageBindContext = function() {\n    var self = this;\n\n    this.applyImage = function(url) {\n        var info;\n\n        if (url) {\n            info = self._getImageInfoWithGivenUrl(url);\n        } else {\n            info = self._getImageInfo();\n        }\n\n        self.eventManager.emit('command', 'AddImage', info);\n        self.hide();\n    };\n};\n\nPopupAddImage.prototype._isUrlType = function() {\n    return !!this.$el.find('.te-image-url-input').val();\n};\n\n/**\n * _renderContent\n * @override\n */\nPopupAddImage.prototype._renderContent = function() {\n    var $popup = this.$el;\n\n    LayerPopup.prototype._renderContent.call(this);\n\n    this.tab = new Tab({\n        initName: 'File',\n        items: ['File', 'URL'],\n        sections: [$popup.find('.te-file-type'), $popup.find('.te-url-type')]\n    });\n\n    this.$body.find('.te-tab-section').append(this.tab.$el);\n};\n\nPopupAddImage.prototype._getImageInfoWithGivenUrl = function(imageUrl) {\n    var altText = this._preAltValue;\n    this._preAltValue = '';\n    return this._makeImageInfo(imageUrl, altText);\n};\n\nPopupAddImage.prototype._getImageInfo = function() {\n    var imageUrl = this.$el.find('.te-image-url-input').val(),\n        altText = this.$el.find('.te-alt-text-input').val();\n\n    return this._makeImageInfo(imageUrl, altText);\n};\n\nPopupAddImage.prototype._makeImageInfo = function(url, alt) {\n    return {\n        imageUrl: url,\n        altText: alt\n    };\n};\n\nPopupAddImage.prototype._getImageFileForm = function() {\n    return this.$el.find('form');\n};\n\nPopupAddImage.prototype.resetInputs = function() {\n    this.$el.find('input').val('');\n};\n\nmodule.exports = PopupAddImage;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"