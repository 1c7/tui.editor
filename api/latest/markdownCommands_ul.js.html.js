tui.util.defineNamespace("fedoc.content", {});
fedoc.content["markdownCommands_ul.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar CommandManager = require('../commandManager');\n\nvar FIND_MD_OL_RX = /^[ \\t]*[\\d]+\\. .*/,\n    FIND_MD_UL_RX = /^[ \\t]*\\* .*/;\n\n/**\n * UL\n * Add unordered list markdown syntax to markdown editor\n * @exports UL\n * @augments Command\n */\nvar UL = CommandManager.command('markdown', /** @lends UL */{\n    name: 'UL',\n    keyMap: ['CTRL+U', 'META+U'],\n    /**\n     * Command handler\n     * @param {MarkdownEditor} mde MarkdownEditor instance\n     */\n    exec: function(mde) {\n        var range, from, line, to,\n            cm = mde.getEditor(),\n            doc = cm.getDoc();\n\n        range = mde.getCurrentRange();\n\n        from = {\n            line: range.from.line,\n            ch: 0\n        };\n\n\n        line = doc.getLine(from.line);\n\n        if (line.match(FIND_MD_OL_RX)) {\n            line = line.replace(/[\\d]+\\. /, '* ');\n\n            to = {\n                line: from.line,\n                ch: line.length + 1\n            };\n\n            doc.replaceRange(line, from, to);\n        } else if (!line.match(FIND_MD_UL_RX)) {\n            doc.replaceRange('* ', from);\n        }\n\n        cm.focus();\n    }\n});\n\nmodule.exports = UL;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"