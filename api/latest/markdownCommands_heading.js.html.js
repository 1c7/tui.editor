tui.util.defineNamespace("fedoc.content", {});
fedoc.content["markdownCommands_heading.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements Heading markdown command\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar CommandManager = require('../commandManager');\n\nvar util = tui.util;\n\n/**\n * Heading\n * Add heading markdown syntax to markdown editor\n * @exports Heading\n * @augments Command\n */\nvar Heading = CommandManager.command('markdown', /** @lends Heading */{\n    name: 'Heading',\n    /**\n     * Command Handler\n     * @param {MarkdownEditor} mde MarkdownEditor instance\n     * @param {number} size heading size\n     */\n    exec: function(mde, size) {\n        var textToModify, range, from, to, textLinesToModify, lengthOfCurrentLineBefore,\n            cm = mde.getEditor(),\n            doc = cm.getDoc();\n\n        // 선택된 영역을 가공함\n        range = mde.getCurrentRange();\n\n        from = {\n            line: range.from.line,\n            ch: 0\n        };\n\n        to = {\n            line: range.to.line,\n            ch: doc.getLineHandle(range.to.line).text.length\n        };\n\n        lengthOfCurrentLineBefore = doc.getLine(to.line).length;\n\n        //영역의 텍스트를 가저오고\n        textToModify = doc.getRange(from, to);\n\n        //원하는 대로 가공한다\n        textLinesToModify = textToModify.split('\\n');\n\n        util.forEachArray(textLinesToModify, function(line, index) {\n            textLinesToModify[index] = getHeadingMarkdown(line, size);\n        });\n\n        //해당 에디터의 내용을 변경한다\n        doc.replaceRange(textLinesToModify.join('\\n'), from, to);\n\n        range.to.ch += doc.getLine(to.line).length - lengthOfCurrentLineBefore;\n\n        doc.setCursor(range.to);\n\n        cm.focus();\n    }\n});\n\nvar FIND_HEADING_RX = /^#+\\s/g;\n\nfunction getHeadingMarkdown(text, size) {\n    var foundedHeading = text.match(FIND_HEADING_RX),\n        heading = '';\n\n    do {\n        heading += '#';\n        size -= 1;\n    } while (size > 0);\n\n    if (foundedHeading) {\n        text = text.split(foundedHeading[0])[1];\n    }\n\n    return heading + ' ' + text;\n}\n\nmodule.exports = Heading;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"