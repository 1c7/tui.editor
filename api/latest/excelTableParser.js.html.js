tui.util.defineNamespace("fedoc.content", {});
fedoc.content["excelTableParser.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements excelTableParser\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\n/**\n * excelTableParser\n * Parse excel paste data\n * @public\n * @exports excelTableParser\n * @param {string} content excel table content\n * @returns {object} result\n */\nfunction excelTableParser(content) {\n    var rows = getRows(content),\n        data = [],\n        rowLength = rows.length,\n        colLength = 0;\n\n    rows.forEach(function(row) {\n        var cols = row.split('\\t');\n\n        if (!cols) {\n            return;\n        } else if (!colLength) {\n            colLength = cols.length;\n        }\n\n        data = data.concat(cols);\n    });\n\n    return {\n        col: colLength,\n        row: rowLength,\n        data: data\n    };\n}\n/**\n * Get row data from raw text with Regexp\n * @public\n * @param {string} content Raw copied text data\n * @returns {Array}\n */\nfunction getRows(content) {\n    content = content.replace(/\"([^\"]+)\"/g, function(match, cell) {\n        return cell.replace(/(\\r\\n)|(\\r)/g, '&lt;br/>');\n    });\n\n    //remove last LF or CR\n    content = content.replace(/(\\r\\n$)|(\\r$)|(\\n$)/, '');\n    //CR or CR-LF to LF\n    content = content.replace(/(\\r\\n)|(\\r)/g, '\\n');\n\n    return content.split('\\n');\n}\n\nmodule.exports = excelTableParser;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"