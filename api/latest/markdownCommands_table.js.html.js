tui.util.defineNamespace("fedoc.content", {});
fedoc.content["markdownCommands_table.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements Table markdown command\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar CommandManager = require('../commandManager');\n\n/**\n * Table\n * Add table markdown syntax to markdown editor\n * @exports Table\n * @augments Command\n */\nvar Table = CommandManager.command('markdown', /** @lends Table */{\n    name: 'Table',\n    /**\n     * Command handler\n     * @param {MarkdownEditor} mde MarkdownEditor instance\n     * @param {number} col column count\n     * @param {number} row row count\n     * @param {Array} data initial table data\n     */\n    exec: function(mde, col, row, data) {\n        var cm = mde.getEditor(),\n            doc = cm.getDoc(),\n            table = '\\n';\n\n        if (cm.getCursor().ch > 0) {\n            table += '\\n';\n        }\n\n        table += makeHeader(col, data);\n        table += makeBody(col, row - 1, data);\n\n        doc.replaceSelection(table);\n\n        if (!data) {\n            cm.setCursor(cm.getCursor().line - row, 2);\n        }\n\n        mde.focus();\n    }\n});\n\n/*\n * makeHeader\n * make table header markdown string\n * @param {number} col column count\n * @returns {string} markdown string\n */\nfunction makeHeader(col, data) {\n    var header = '|',\n        border = '|',\n        index = 0;\n\n    while (col) {\n        if (data) {\n            header += ' ' + data[index] + ' |';\n            index += 1;\n        } else {\n            header += '  |';\n        }\n\n        border += ' --- |';\n\n        col -= 1;\n    }\n    return header + '\\n' + border + '\\n';\n}\n\n/**\n * makeBody\n * make table body markdown string\n * @param {number} col column count\n * @param {number} row row count\n * @param {Array} data initial table data\n * @returns {string} html string\n */\nfunction makeBody(col, row, data) {\n    var body = '',\n        index = col,\n        irow, icol;\n\n    for (irow = 0; irow &lt; row; irow += 1) {\n        body += '|';\n\n        for (icol = 0; icol &lt; col; icol += 1) {\n            if (data) {\n                body += ' ' + data[index] + ' |';\n                index += 1;\n            } else {\n                body += '  |';\n            }\n        }\n\n        body += '\\n';\n    }\n\n    body = body.replace(/\\n$/g, '');\n\n    return body;\n}\nmodule.exports = Table;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"