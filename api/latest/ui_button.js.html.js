tui.util.defineNamespace("fedoc.content", {});
fedoc.content["ui_button.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n'use strict';\n\nvar UIController = require('./uicontroller');\nvar Tooltip = require('./tooltip');\n\nvar util = tui.util;\nvar tooltip = new Tooltip();\n\n/**\n * Button\n * initialize button\n * @exports Button\n * @augments UIController\n * @constructor\n * @class\n * @param {object} options 옵션\n * @param {string} options.className 만들어진 RootElement에 추가할 클래스\n * @param {string} options.command 클릭되면 실행될 커맨드명\n * @param {string} options.text 버튼안에 들어갈 텍스트\n * @param {string} options.style 추가적으로 적용될 CSS스타일\n */\nfunction Button(options) {\n    UIController.call(this, {\n        tagName: 'button',\n        className: options.className + ' tui-toolbar-icons',\n        rootElement: options.$el\n    });\n\n    this._setOptions(options);\n\n    this.render();\n\n    this.attachEvents({\n        'click': '_onClick'\n    });\n\n    if (options.tooltip) {\n        this.attachEvents({\n            'mouseover': '_onOver',\n            'mouseout': '_onOut'\n        });\n    }\n}\n\nButton.prototype = util.extend(\n    {},\n    UIController.prototype\n);\n\nButton.prototype._setOptions = function(options) {\n    this.command = options.command;\n    this.event = options.event;\n    this.text = options.text;\n    this.tooltip = options.tooltip;\n    this.style = options.style;\n};\n\n/**\n * Button의 모습을 그린다\n */\nButton.prototype.render = function() {\n    this.$el.text(this.text);\n    this.$el.attr('type', 'button');\n\n    if (this.style) {\n        this.$el.attr('style', this.style);\n    }\n};\n\n/**\n * _onClick\n * Click event handler\n */\nButton.prototype._onClick = function() {\n    if (this.command) {\n        this.trigger('command', this.command);\n    } else {\n        this.trigger('event', this.event);\n    }\n\n    this.trigger('clicked');\n};\n\nButton.prototype._onOver = function() {\n    tooltip.show(this.$el, this.tooltip);\n};\n\nButton.prototype._onOut = function() {\n    tooltip.hide();\n};\n\nmodule.exports = Button;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"