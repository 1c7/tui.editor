tui.util.defineNamespace("fedoc.content", {});
fedoc.content["markedCustomRenderer.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements markedCustomRenderer\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent\n */\n\n'use strict';\n\n/**\n * markedCustomRenderer\n * @exports markedCustomRenderer\n * @augments marked.Renderer\n * @class markedCustomRenderer\n */\nvar markedCustomRenderer = new window.marked.Renderer();\n\n/**\n * Task list Regexp\n * @api\n * @memberOf markedCustomRenderer\n * @type {RegExp}\n */\nvar regexTaskList = /^((?:&lt;p>|))(\\[(?:x| )\\]) /i;\n\n/**\n * Render listItem by given text.\n * @api\n * @memberOf markedCustomRenderer\n * @param {string} text Source text\n * @returns {string}\n */\nmarkedCustomRenderer.listitem = function(text) {\n    var cap,\n        checked,\n        className = '',\n        output = '';\n\n    cap = regexTaskList.exec(text);\n\n    if (cap) {\n        text = text.substring(cap[0].length);\n        className = ' class=\"task-list-item\"';\n        checked = cap[2].toLowerCase() === '[x]' ? ' checked' : '';\n        output += cap[1] + '&lt;input type=\"checkbox\" class=\"task-list-item-checkbox\"' + checked + '> ';\n    }\n\n    return '&lt;li' + className + '>' + output + text + '&lt;/li>\\n';\n};\n\n/**\n * Render code\n * @api\n * @memberOf markedCustomRenderer\n * @param {string} code Source text of code content\n * @param {string} lang Type of language\n * @param {boolean} escaped Whether text is escaped or not\n * @returns {string}\n */\nmarkedCustomRenderer.code = function(code, lang, escaped) {\n    var out;\n    if (this.options.highlight) {\n        out = this.options.highlight(code, lang);\n        if (out !== null &amp;&amp; out !== code) {\n            escaped = true;\n            code = out;\n        }\n    }\n\n    if (!lang) {\n        return '&lt;pre>&lt;code>'\n        + (escaped ? code : escape(code, true))\n        + '\\n&lt;/code>&lt;/pre>';\n    }\n\n    return '&lt;pre>&lt;code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\" data-language=\"' + escape(lang, true) + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n&lt;/code>&lt;/pre>\\n';\n};\n\n/**\n * Render table\n * @api\n * @memberOf markedCustomRenderer\n * @param {string} header Text for table header\n * @param {string} body Text for table body\n * @returns {string}\n */\nmarkedCustomRenderer.table = function(header, body) {\n    var cellLen = header.match(/\\/th/g).length;\n    var foundLastTr = body.match(/\\n?&lt;tr>[\\s\\S]*?&lt;\\/tr>\\n$/g);\n    var lastTr;\n\n    if (foundLastTr &amp;&amp; foundLastTr.length) {\n        lastTr = foundLastTr[0];\n    }\n\n    if (lastTr &amp;&amp; lastTr.match(/\\/td/g).length &lt; cellLen) {\n        body = body.replace(/&lt;\\/td>\\n&lt;\\/tr>\\n$/g, '&lt;/td>\\n&lt;td>&lt;/td>\\n&lt;/tr>\\n');\n    }\n\n    return '&lt;table>\\n'\n        + '&lt;thead>\\n'\n        + header\n        + '&lt;/thead>\\n'\n        + '&lt;tbody>\\n'\n        + body\n        + '&lt;/tbody>\\n'\n        + '&lt;/table>\\n';\n};\n\n/**\n * Replace 'del' to 's' tag\n * @api\n * @memberOf markedCustomRenderer\n * @override\n * @param {string} text Text content\n * @returns {string}\n */\nmarkedCustomRenderer.del = function(text) {\n    var textContent = '';\n\n    if (text) {\n        textContent = '&lt;s>' + text + '&lt;/s>';\n    }\n\n    return textContent;\n};\n\n/**\n * escape code from marked\n * @param {string} html HTML string\n * @param {string} encode Boolean value of whether encode or not\n * @returns {string}\n */\nfunction escape(html, encode) {\n    return html\n        .replace(!encode ? /&amp;(?!#?\\w+;)/g : /&amp;/g, '&amp;amp;')\n        .replace(/&lt;/g, '&amp;lt;')\n        .replace(/>/g, '&amp;gt;')\n        .replace(/\"/g, '&amp;quot;')\n        .replace(/'/g, '&amp;#39;');\n}\n\nmodule.exports = markedCustomRenderer;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"