tui.util.defineNamespace("fedoc.content", {});
fedoc.content["keyMapper.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements KeyMapper\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\n/**\n * Constant of key mapping\n * @type {string[]}\n */\nvar KEYBOARD_MAP = [\n    '', // [0]\n    '', // [1]\n    '', // [2]\n    'CANCEL', // [3]\n    '', // [4]\n    '', // [5]\n    'HELP', // [6]\n    '', // [7]\n    'BACK_SPACE', // [8]\n    'TAB', // [9]\n    '', // [10]\n    '', // [11]\n    'CLEAR', // [12]\n    'ENTER', // [13]\n    'ENTER_SPECIAL', // [14]\n    '', // [15]\n    '', // [16] SHIFT\n    '', // [17] CONTROL\n    '', // [18] ALT\n    'PAUSE', // [19]\n    'CAPS_LOCK', // [20]\n    'KANA', // [21]\n    'EISU', // [22]\n    'JUNJA', // [23]\n    'FINAL', // [24]\n    'HANJA', // [25]\n    '', // [26]\n    'ESCAPE', // [27]\n    'CONVERT', // [28]\n    'NONCONVERT', // [29]\n    'ACCEPT', // [30]\n    'MODECHANGE', // [31]\n    'SPACE', // [32]\n    'PAGE_UP', // [33]\n    'PAGE_DOWN', // [34]\n    'END', // [35]\n    'HOME', // [36]\n    'LEFT', // [37]\n    'UP', // [38]\n    'RIGHT', // [39]\n    'DOWN', // [40]\n    'SELECT', // [41]\n    'PRINT', // [42]\n    'EXECUTE', // [43]\n    'PRINTSCREEN', // [44]\n    'INSERT', // [45]\n    'DELETE', // [46]\n    '', // [47]\n    '0', // [48]\n    '1', // [49]\n    '2', // [50]\n    '3', // [51]\n    '4', // [52]\n    '5', // [53]\n    '6', // [54]\n    '7', // [55]\n    '8', // [56]\n    '9', // [57]\n    ':', // [58]\n    ';', // [59]\n    '&lt;', // [60]\n    '=', // [61]\n    '>', // [62]\n    '?', // [63]\n    'AT', // [64]\n    'A', // [65]\n    'B', // [66]\n    'C', // [67]\n    'D', // [68]\n    'E', // [69]\n    'F', // [70]\n    'G', // [71]\n    'H', // [72]\n    'I', // [73]\n    'J', // [74]\n    'K', // [75]\n    'L', // [76]\n    'M', // [77]\n    'N', // [78]\n    'O', // [79]\n    'P', // [80]\n    'Q', // [81]\n    'R', // [82]\n    'S', // [83]\n    'T', // [84]\n    'U', // [85]\n    'V', // [86]\n    'W', // [87]\n    'X', // [88]\n    'Y', // [89]\n    'Z', // [90]\n    '', // [91] META\n    '', // [92]\n    'CONTEXT_MENU', // [93]\n    '', // [94]\n    'SLEEP', // [95]\n    'NUMPAD0', // [96]\n    'NUMPAD1', // [97]\n    'NUMPAD2', // [98]\n    'NUMPAD3', // [99]\n    'NUMPAD4', // [100]\n    'NUMPAD5', // [101]\n    'NUMPAD6', // [102]\n    'NUMPAD7', // [103]\n    'NUMPAD8', // [104]\n    'NUMPAD9', // [105]\n    'MULTIPLY', // [106]\n    'ADD', // [107]\n    'SEPARATOR', // [108]\n    'SUBTRACT', // [109]\n    'DECIMAL', // [110]\n    'DIVIDE', // [111]\n    'F1', // [112]\n    'F2', // [113]\n    'F3', // [114]\n    'F4', // [115]\n    'F5', // [116]\n    'F6', // [117]\n    'F7', // [118]\n    'F8', // [119]\n    'F9', // [120]\n    'F10', // [121]\n    'F11', // [122]\n    'F12', // [123]\n    'F13', // [124]\n    'F14', // [125]\n    'F15', // [126]\n    'F16', // [127]\n    'F17', // [128]\n    'F18', // [129]\n    'F19', // [130]\n    'F20', // [131]\n    'F21', // [132]\n    'F22', // [133]\n    'F23', // [134]\n    'F24', // [135]\n    '', // [136]\n    '', // [137]\n    '', // [138]\n    '', // [139]\n    '', // [140]\n    '', // [141]\n    '', // [142]\n    '', // [143]\n    'NUM_LOCK', // [144]\n    'SCROLL_LOCK', // [145]\n    'WIN_OEM_FJ_JISHO', // [146]\n    'WIN_OEM_FJ_MASSHOU', // [147]\n    'WIN_OEM_FJ_TOUROKU', // [148]\n    'WIN_OEM_FJ_LOYA', // [149]\n    'WIN_OEM_FJ_ROYA', // [150]\n    '', // [151]\n    '', // [152]\n    '', // [153]\n    '', // [154]\n    '', // [155]\n    '', // [156]\n    '', // [157]\n    '', // [158]\n    '', // [159]\n    '@', // [160]\n    '!', // [161]\n    '\"', // [162]\n    '#', // [163]\n    '$', // [164]\n    '%', // [165]\n    '&amp;', // [166]\n    '_', // [167]\n    '(', // [168]\n    ')', // [169]\n    '*', // [170]\n    '+', // [171]\n    '|', // [172]\n    '-', // [173]\n    '{', // [174]\n    '}', // [175]\n    '~', // [176]\n    '', // [177]\n    '', // [178]\n    '', // [179]\n    '', // [180]\n    'VOLUME_MUTE', // [181]\n    'VOLUME_DOWN', // [182]\n    'VOLUME_UP', // [183]\n    '', // [184]\n    '', // [185]\n    ';', // [186]\n    '=', // [187]\n    ',', // [188]\n    '-', // [189]\n    '.', // [190]\n    '/', // [191]\n    '`', // [192]\n    '', // [193]\n    '', // [194]\n    '', // [195]\n    '', // [196]\n    '', // [197]\n    '', // [198]\n    '', // [199]\n    '', // [200]\n    '', // [201]\n    '', // [202]\n    '', // [203]\n    '', // [204]\n    '', // [205]\n    '', // [206]\n    '', // [207]\n    '', // [208]\n    '', // [209]\n    '', // [210]\n    '', // [211]\n    '', // [212]\n    '', // [213]\n    '', // [214]\n    '', // [215]\n    '', // [216]\n    '', // [217]\n    '', // [218]\n    '[', // [219]\n    '\\\\', // [220]\n    ']', // [221]\n    '\\'', // [222]\n    '', // [223]\n    'META', // [224]\n    'ALTGR', // [225]\n    '', // [226]\n    'WIN_ICO_HELP', // [227]\n    'WIN_ICO_00', // [228]\n    '', // [229]\n    'WIN_ICO_CLEAR', // [230]\n    '', // [231]\n    '', // [232]\n    'WIN_OEM_RESET', // [233]\n    'WIN_OEM_JUMP', // [234]\n    'WIN_OEM_PA1', // [235]\n    'WIN_OEM_PA2', // [236]\n    'WIN_OEM_PA3', // [237]\n    'WIN_OEM_WSCTRL', // [238]\n    'WIN_OEM_CUSEL', // [239]\n    'WIN_OEM_ATTN', // [240]\n    'WIN_OEM_FINISH', // [241]\n    'WIN_OEM_COPY', // [242]\n    'WIN_OEM_AUTO', // [243]\n    'WIN_OEM_ENLW', // [244]\n    'WIN_OEM_BACKTAB', // [245]\n    'ATTN', // [246]\n    'CRSEL', // [247]\n    'EXSEL', // [248]\n    'EREOF', // [249]\n    'PLAY', // [250]\n    'ZOOM', // [251]\n    '', // [252]\n    'PA1', // [253]\n    'WIN_OEM_CLEAR', // [254]\n    '' // [255]\n];\n\nvar sharedInstance;\n\n/**\n * KeyMapper\n * @exports KeyMapper\n * @constructor\n * @class KeyMapper\n * @param {object} [options] options\n *    @param {string} options.splitter splitter string default is +\n */\nfunction KeyMapper(options) {\n    this._setSplitter(options);\n}\n\n/**\n * Set key splitter\n * @param {object} options Option object\n * @memberOf KeyMapper\n * @private\n */\nKeyMapper.prototype._setSplitter = function(options) {\n    var splitter = options ? options.splitter : '+';\n    this._splitter = splitter;\n};\n/**\n * Convert event to keyMap\n * @api\n * @memberOf KeyMapper\n * @param {event} event Event object\n * @returns {string}\n */\nKeyMapper.prototype.convert = function(event) {\n    var keyMap = [], keyChar;\n\n    if (event.shiftKey) {\n        keyMap.push('SHIFT');\n    }\n\n    if (event.ctrlKey) {\n        keyMap.push('CTRL');\n    }\n\n    if (event.metaKey) {\n        keyMap.push('META');\n    }\n\n    if (event.altKey) {\n        keyMap.push('ALT');\n    }\n\n    keyChar = this._getKeyCodeChar(event.keyCode);\n\n    if (keyChar) {\n        keyMap.push(keyChar);\n    }\n\n    return keyMap.join(this._splitter);\n};\n\n/**\n * Get character from key code\n * @memberOf KeyMapper\n * @param {number} keyCode Key code\n * @returns {string}\n * @private\n */\nKeyMapper.prototype._getKeyCodeChar = function(keyCode) {\n    var keyCodeChar;\n\n    keyCodeChar = KEYBOARD_MAP[keyCode];\n\n    return keyCodeChar;\n};\n\n/**\n * Get sharedInstance\n * @api\n * @memberOf KeyMapper\n * @returns {KeyMapper}\n */\nKeyMapper.getSharedInstance = function() {\n    if (!sharedInstance) {\n        sharedInstance = new KeyMapper();\n    }\n\n    return sharedInstance;\n};\n\nmodule.exports = KeyMapper;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"