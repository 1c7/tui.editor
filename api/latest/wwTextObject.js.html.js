tui.util.defineNamespace("fedoc.content", {});
fedoc.content["wwTextObject.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview Implements WwTextObject\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar domUtils = require('./domUtils');\nvar isIE11 = tui.util.browser.msie &amp;&amp; tui.util.browser.version === 11;\nvar isWindowChrome = (navigator.appVersion.indexOf('Win') !== -1) &amp;&amp; tui.util.browser.chrome;\nvar isNeedOffsetFix = isIE11 || isWindowChrome;\n\n/**\n * WwTextObject\n * @exports WwTextObject\n * @class WwTextObject\n * @constructor\n * @param {WysiwygEditor} wwe wysiwygEditor\n * @param {Range} range Range object\n */\nfunction WwTextObject(wwe, range) {\n    this._wwe = wwe;\n\n    //msie11 and window chrome can't make start offset of range api correctly when compositing korean.\n    //so we need fix this when compositing korean.(and maybe other languages that needs composition.)\n    if (isNeedOffsetFix) {\n        this.isComposition = false;\n        this._initCompositionEvent();\n    }\n\n    this.setRange(range || this._wwe.getRange());\n}\n\n/**\n * Initialize composition event\n * @memberOf WwTextObject\n * @private\n */\nWwTextObject.prototype._initCompositionEvent = function() {\n    var self = this;\n\n    this._wwe.getEditor().addEventListener('compositionstart', function() {\n        self.isComposition = true;\n    });\n\n    this._wwe.getEditor().addEventListener('compositionend', function() {\n        self.isComposition = false;\n    });\n};\n\n/**\n * Set _range object to given range object\n * @param {Range} range Range object\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.setRange = function(range) {\n    if (this._range) {\n        this._range.detach();\n    }\n\n    this._range = range;\n};\n\n/**\n * Expand start offset by one\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.expandStartOffset = function() {\n    var range = this._range;\n\n    if (domUtils.isTextNode(range.startContainer) &amp;&amp; range.startOffset > 0) {\n        range.setStart(range.startContainer, range.startOffset - 1);\n    }\n};\n\n/**\n * Expand end offset by one\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.expandEndOffset = function() {\n    var range = this._range;\n\n    if (domUtils.isTextNode(range.endContainer) &amp;&amp; range.endOffset &lt; range.endContainer.nodeValue.length) {\n        range.setEnd(range.endContainer, range.endOffset + 1);\n    }\n};\n\n/**\n * setEnd range on start\n * @param {Range} range Range object\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.setEndBeforeRange = function(range) {\n    var offset = range.startOffset;\n\n    if (this.isComposition) {\n        offset += 1;\n    }\n\n    this._range.setEnd(range.startContainer, offset);\n};\n\n/**\n * Get text content\n * @returns {string}\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.getTextContent = function() {\n    return this._range.cloneContents().textContent;\n};\n\n/**\n * Replace current selection content to given text\n * @param {string} content Text content\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.replaceContent = function(content) {\n    this._wwe.getEditor().setSelection(this._range);\n    this._wwe.getEditor().insertHTML(content);\n    this._range = this._wwe.getRange();\n};\n\n/**\n * Delete current selection content\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.deleteContent = function() {\n    this._wwe.getEditor().setSelection(this._range);\n    this._wwe.getEditor().insertHTML('');\n    this._range = this._wwe.getRange();\n};\n\n/**\n * Peek previous element's content\n * @param {number} offset Offset to peek\n * @returns {string}\n * @memberOf WwTextObject\n * @api\n */\nWwTextObject.prototype.peekStartBeforeOffset = function(offset) {\n    var range = this._range.cloneRange();\n\n    range.setStart(range.startContainer, Math.max(range.startOffset - offset, 0));\n    range.setEnd(this._range.startContainer, this._range.startOffset);\n\n    return range.cloneContents().textContent;\n};\n\nmodule.exports = WwTextObject;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"