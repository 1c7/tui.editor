tui.util.defineNamespace("fedoc.content", {});
fedoc.content["preview.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview\n * @author Sungho Kim(sungho-kim@nhnent.com) FE Development Team/NHN Ent.\n */\n\n'use strict';\n\nvar LazyRunner = require('./lazyRunner');\n\n/**\n * Preview\n * @exports Preview\n * @class Preview\n * @constructor\n * @param {jQuery} $el Container element for preview\n * @param {EventManager} eventManager Event manager instance\n * @param {Convertor} converter Convertor instance\n **/\nfunction Preview($el, eventManager, converter) {\n    this.eventManager = eventManager;\n    this.converter = converter;\n    this.$el = $el;\n\n    this._initContentSection();\n\n    this.lazyRunner = new LazyRunner();\n\n    this.lazyRunner.registerLazyRunFunction(\n        'refresh',\n        this.refresh,\n        800,\n        this\n    );\n\n    this._initEvent();\n}\n\n/**\n * Initialize event\n * @private\n */\nPreview.prototype._initEvent = function() {\n    var self = this;\n\n    this.eventManager.listen('contentChangedFromMarkdown', function(markdownEditor) {\n        self.lazyRunner.run('refresh', markdownEditor.getValue());\n    });\n};\n\n/**\n * Initialize content selection\n * @private\n */\nPreview.prototype._initContentSection = function() {\n    this.$previewContent = $('&lt;div class=\"tui-editor-contents\" />');\n    this.$el.append(this.$previewContent);\n};\n\n/**\n * Refresh rendering\n * @api\n * @memberOf Preview\n * @param {string} markdown Markdown text\n */\nPreview.prototype.refresh = function(markdown) {\n    this.render(this.converter.toHTMLWithCodeHightlight(markdown));\n};\n\n/**\n * Render HTML on preview\n * @api\n * @memberOf Preview\n * @param {string} html HTML string\n */\nPreview.prototype.render = function(html) {\n    var processedDataByHook,\n        finalHtml = html;\n\n    processedDataByHook = this.eventManager.emit('previewBeforeHook', html);\n\n    if (processedDataByHook) {\n        finalHtml = processedDataByHook[0];\n    }\n\n    this.$previewContent.empty();\n    this.$previewContent.html(finalHtml);\n\n    this.eventManager.emit('previewRenderAfter', this);\n};\n\n/**\n * Set preview height\n * @api\n * @memberOf Preview\n * @param {number} height Height for preview container\n */\nPreview.prototype.setHeight = function(height) {\n    this.$el.height(height);\n};\n\nmodule.exports = Preview;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"